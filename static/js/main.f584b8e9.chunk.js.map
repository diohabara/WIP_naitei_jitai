{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useForm","register","handleSubmit","watch","useState","subject","setSubject","body","setBody","onSubmit","userName","userUniversity","company","recruiterName","console","log","type","className","text","onCopy","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA2FeA,EA9Ec,WAC3B,MAA0CC,cAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAEhC,EAA8BC,mBAAS,gBAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,gBAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAWP,GACf,YAA2D,IAAxDQ,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,eAAgBC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACpCP,EAAW,oDAAD,OAAaK,EAAb,YAA+BD,IACzCF,EAAQ,OAAD,OACTI,EADS,kCAETC,EAFS,mLAIiBH,EAJjB,+tDAcEG,EAdF,uaAiBTH,OAWF,OAPAI,QAAQC,IACNZ,EAAM,YACNA,EAAM,kBACNA,EAAM,WACNA,EAAM,kBAIN,qCACE,uBAAMM,SAAUA,EAAhB,UACE,iDACA,qCAAWR,EAAS,cAEpB,uDACA,qCAAWA,EAAS,oBAEpB,uDACA,qCAAWA,EAAS,aAEpB,yEACA,qCAAWA,EAAS,mBAEpB,uBAAOe,KAAK,cAGd,8CACA,sBAAKC,UAAU,UAAf,UACE,cAAC,kBAAD,CAAiBC,KAAMb,EAASc,OAAQ,kBAAMC,MAAM,WAApD,SACE,+BACE,cAAC,IAAD,QAGJ,8BAAMf,OAGR,8CACA,sBAAKY,UAAU,OAAf,UACE,cAAC,kBAAD,CAAiBC,KAAMX,EAAMY,OAAQ,kBAAMC,MAAM,WAAjD,SACE,+BACE,cAAC,IAAD,QAGJ,8BAAMb,WCvECc,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.f584b8e9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useForm } from \"react-hook-form\";\nimport { MdContentCopy } from \"react-icons/md\";\nimport \"./App.css\";\n\ntype Inputs = {\n  userName: string;\n  userUniversity: string;\n  company: string;\n  recruiterName: string;\n};\n\nexport const App: React.FC = () => {\n  const { register, handleSubmit, watch } = useForm<Inputs>();\n\n  const [subject, setSubject] = useState(\"件名\");\n  const [body, setBody] = useState(\"本文\");\n\n  const onSubmit = handleSubmit(\n    ({ userName, userUniversity, company, recruiterName }) => {\n      setSubject(`内定辞退のご連絡 ${userUniversity} ${userName}`);\n      setBody(`\n  ${company} 人事部\n  ${recruiterName}様\n\n  お世話になっております。内定の通知をいただきました、${userName}です。\n  メールにて失礼いたします。\n\n  この度は内定のご連絡をいただき、誠にありがとうございました。\n  このようなうれしいお知らせをいただきながら誠に恐縮なのですが、検討の結果、内定を辞退させていただきたくご連絡を差し上げました。\n\n  履歴書や職務経歴書にお目通しをいただいたり、面接でのご対応をしていただいたりと、貴重なお時間を割いてくださったにもかかわらず、このようなご連絡になりますことを大変心苦しく感じております。\n\n  本来であれば貴社へお伺いし、直接お詫びをするべきところではございますが、メールでのご連絡となるところを、何卒ご容赦いただきたくお願い申し上げます。\n\n  面接をご担当いただいた${recruiterName}様をはじめ、採用に関わってくださった皆さまには、心より感謝しております。\n  最後になりますが、貴社の益々の発展を心よりお祈り申し上げます。\n\n  ${userName}`);\n    }\n  );\n\n  console.log(\n    watch(\"userName\"),\n    watch(\"userUniversity\"),\n    watch(\"company\"),\n    watch(\"recruiterName\")\n  );\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <label>名前</label>\n        <input {...register(\"userName\")} />\n\n        <label>大学名</label>\n        <input {...register(\"userUniversity\")} />\n\n        <label>会社名</label>\n        <input {...register(\"company\")} />\n\n        <label>採用担当者名</label>\n        <input {...register(\"recruiterName\")} />\n\n        <input type=\"submit\" />\n      </form>\n\n      <h2>件名</h2>\n      <div className=\"subject\">\n        <CopyToClipboard text={subject} onCopy={() => alert(\"Copied\")}>\n          <span>\n            <MdContentCopy />\n          </span>\n        </CopyToClipboard>\n        <pre>{subject}</pre>\n      </div>\n\n      <h2>本文</h2>\n      <div className=\"body\">\n        <CopyToClipboard text={body} onCopy={() => alert(\"Copied\")}>\n          <span>\n            <MdContentCopy />\n          </span>\n        </CopyToClipboard>\n        <pre>{body}</pre>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}